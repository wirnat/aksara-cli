definitions:
  branch_request.BranchStore:
    properties:
      company_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    required:
    - name
    type: object
  branch_request.BranchUpdate:
    properties:
      company_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    required:
    - uuid
    type: object
  company_request.CompanyStore:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    required:
    - name
    type: object
  company_request.CompanyUpdate:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    required:
    - uuid
    type: object
  model.Branch:
    properties:
      company_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        description: '@meta validate_store:true'
        type: string
      updated_at:
        type: string
      uuid:
        description: '@meta validate_update:true'
        type: string
    type: object
  model.Company:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        description: '@meta validate_store:true'
        type: string
      updated_at:
        type: string
      uuid:
        description: '@meta validate_update:true'
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
paths:
  /branch:
    get:
      consumes:
      - application/json
      description: fetch branch with paginator param and response
      parameters:
      - description: search by id
        in: query
        name: id
        type: string
      - description: search by uuid
        in: query
        name: uuid
        type: string
      - description: search by created_at
        in: query
        name: created_at
        type: string
      - description: search by created_by
        in: query
        name: created_by
        type: string
      - description: search by updated_at
        in: query
        name: updated_at
        type: string
      - description: search by updated_by
        in: query
        name: updated_by
        type: string
      - description: search by deleted_by
        in: query
        name: deleted_by
        type: string
      - description: search by text
        in: query
        name: text
        type: string
      - description: search by parent_branch_uuid
        in: query
        name: parent_branch_uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Branch'
            type: array
      summary: Fetch Branch with Paginator
      tags:
      - branch
    post:
      consumes:
      - application/json
      description: create a branch
      parameters:
      - description: payload creates branch
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/branch_request.BranchStore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Branch'
            type: array
      summary: Store Branch
      tags:
      - branch
  /branch/{uuid}:
    delete:
      consumes:
      - application/json
      description: delete a branch by UUID
      parameters:
      - description: uuid branch
        in: path
        name: uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Delete Branch
      tags:
      - branch
    get:
      consumes:
      - application/json
      description: get detail of branch
      parameters:
      - description: uuid branch
        in: path
        name: uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Branch'
      summary: Show Branch
      tags:
      - branch
    put:
      consumes:
      - application/json
      description: update a branch
      parameters:
      - description: uuid branch
        in: path
        name: uuid
        type: string
      - description: payload updates branch
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/branch_request.BranchUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Branch'
            type: array
      summary: Update Branch
      tags:
      - branch
  /company:
    get:
      consumes:
      - application/json
      description: fetch company with paginator param and response
      parameters:
      - description: search by id
        in: query
        name: id
        type: string
      - description: search by uuid
        in: query
        name: uuid
        type: string
      - description: search by created_at
        in: query
        name: created_at
        type: string
      - description: search by created_by
        in: query
        name: created_by
        type: string
      - description: search by updated_at
        in: query
        name: updated_at
        type: string
      - description: search by updated_by
        in: query
        name: updated_by
        type: string
      - description: search by deleted_by
        in: query
        name: deleted_by
        type: string
      - description: search by text
        in: query
        name: text
        type: string
      - description: search by parent_company_uuid
        in: query
        name: parent_company_uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Company'
            type: array
      summary: Fetch Company with Paginator
      tags:
      - company
    post:
      consumes:
      - application/json
      description: create a company
      parameters:
      - description: payload creates company
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/company_request.CompanyStore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Company'
            type: array
      summary: Store Company
      tags:
      - company
  /company/{uuid}:
    delete:
      consumes:
      - application/json
      description: delete a company by UUID
      parameters:
      - description: uuid company
        in: path
        name: uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Delete Company
      tags:
      - company
    get:
      consumes:
      - application/json
      description: get detail of company
      parameters:
      - description: uuid company
        in: path
        name: uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Company'
      summary: Show Company
      tags:
      - company
    put:
      consumes:
      - application/json
      description: update a company
      parameters:
      - description: uuid company
        in: path
        name: uuid
        type: string
      - description: payload updates company
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/company_request.CompanyUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Company'
            type: array
      summary: Update Company
      tags:
      - company
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
